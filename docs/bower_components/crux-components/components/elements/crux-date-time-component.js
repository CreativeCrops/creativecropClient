Lyte.Component.register("crux-date-time-component",{_template:'<template tag-name="crux-date-time-component">\t<template is="switch" value="{{cxPropFrom}}"><template case="view">\t\t\t<span class="f13">{{cxPropValue}}</span>\t\t\t\t</template><template case="criteria">\t\t\t\t<div class="dIB">\t\t\t\t\t<div class="dIB fL datewidth">\t\t\t\t\t\t<lyte-input lt-prop-type="date" lt-prop-id="searchValue" lt-prop-placeholder="{{cxPropDatePattern}}" lt-prop-current-date="{{selectedDate}}" lt-prop-start-week-day="{{startWeekDay}}"></lyte-input>\t\t\t\t\t</div>\t\t\t\t\t<div class="dIB fL" style="width : 90px;">\t\t\t\t\t\t<lyte-input lt-prop-type="time" lt-prop-minute-interval="30" lt-prop-dropdown="true" lt-prop-direction="vertical" lt-prop-appearance="flat" lt-prop-time-format="{{cxPropTimeFormat}}" lt-prop-default-time="{{startTime}}" lt-prop-start-time="12:00"></lyte-input>\t\t\t\t\t</div>\t\t\t\t</div>\t\t\t\t\t</template></template></template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"switch",position:[1],cases:{view:{dynamicNodes:[{type:"text",position:[1,0]}]},criteria:{dynamicNodes:[{type:"attr",position:[1,1,1]},{type:"componentDynamic",position:[1,1,1]},{type:"attr",position:[1,3,1]},{type:"componentDynamic",position:[1,3,1]}]}},default:{}}],_observedAttributes:["cxPropValue","cxPropFrom","cxPropDatePattern","cxPropTimeFormat","startWeekDay","format","cxPropEmptyValue","selectedDate","startTime","defaultTime"],data:function(){return{cxPropValue:Lyte.attr("string"),cxPropFrom:Lyte.attr("string",{default:"view"}),cxPropDatePattern:Lyte.attr("string"),cxPropTimeFormat:Lyte.attr("number"),startWeekDay:Lyte.attr("number",{default:Crm.calPreferences.WEEKSTARTSON}),format:Lyte.attr("string"),cxPropEmptyValue:Lyte.attr("string",{default:""}),selectedDate:Lyte.attr("string"),startTime:Lyte.attr("string"),defaultTime:Lyte.attr("string")}},init:function(){var t=Crm.userDetails.DATE_PATTERN;this.setData({cxPropDatePattern:t,format:t.toUpperCase()}),"view"==this.getData("cxPropFrom")?this.getData("cxPropValue")?this.setData("cxPropValue",Utils.getDateTimeInUsrViewFormat(Utils.getUtcDateObj(new Date(this.getData("cxPropValue"))))):this.setData("cxPropValue",this.getData("cxPropEmptyValue")):(this.getData("cxPropTimeFormat")||(Crm.userDetails.TIME_FORMAT.indexOf("a")?(timeFormat="12",this.setData({cxPropTimeFormat:"12",startTime:"12:00 AM"})):this.setData({cxPropTimeFormat:"24",startTime:"12:00"})),this.getData("cxPropValue")?(this.setData("selectedDate",Utils.getDateInUserDatePattern(new Date(this.getData("cxPropValue")))),this.setData("defaultTime",Utils.getTimeInUserFormat(new Date(this.getData("cxPropValue"))))):(this.setData("selectedDate",Utils.getDateInUserDatePattern(new Date)),this.setData("defaultTime","01:00"+("12"==timeFormat?_cruxI18n.getMsg("AM"):""))))}});