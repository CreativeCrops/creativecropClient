/* Default theme imported */

@import "../themes/default/ui-elements/gridstack/gridstack.variables.less";

/* Loading theme in configuration */

@import "../config.less";

@import (optional) "../themes/@{gridstack}/ui-elements/gridstack/gridstack.variables.less";

/* Loading custom themes */

@import (optional) "../overrides/ui-elements/gridstack/gridstack.variables.less";

/* Gridstack styles */

lyte-gridstack:not(.gridFreezeMode) .lyteGridStackLeft{
	.gridStackLeft();
		    height: @height;
    		width: @width;
		    position: absolute !important;
		    left: @left;
		    top: @top;
		    bottom: @bottom;
		    cursor: @cursor;
		    z-index: @zIndex;
	}
lyte-gridstack:not(.gridFreezeMode) .lyteGridStackRight{
	.lyteGridStackRight();
		    height: @height;
    		width: @width;
		    position: absolute !important;
		    right: @right;
		    top: @top;
		    bottom: @bottom;
		    cursor: @cursor;
		    z-index: @zIndex;
	}
lyte-gridstack:not(.gridFreezeMode) .lyteGridStackBottom{
		.lyteGridStackBottom();
		    height: @height;
    		width: @width;
		    position: absolute !important;
		    left: @left;
		    bottom: @bottom;
		    cursor: @cursor;
		     z-index: @zIndex;
	}
lyte-gridstack:not(.gridFreezeMode) .lyteGridStackBottomLeft{
		.lyteGridStackBottomLeft();
			height: @height;
			width: @width;
			bottom: @bottom;
			left: @left;
			cursor: @cursor;
			position: absolute !important;
			z-index: @zIndex;
	}
lyte-gridstack:not(.gridFreezeMode) .lyteGridStackBottomRight{
		.lyteGridStackBottomRight();
			height: @height;
			width: @width;
			bottom: @bottom;
			right: @right;
			cursor: @cursor;
			position: absolute !important;
			 z-index: @zIndex;
	}
lyte-gridstack:not(.gridFreezeMode) .lyteGridStackTop{
		.lyteGridStackTop()
		    height: @height;
    		width: @width;
		    position: absolute !important;
		    left: @left;
		    top: @top;
		    cursor: @cursor;
		    z-index: @zIndex;
	}
lyte-gridstack:not(.gridFreezeMode) .lyteGridStackTopLeft{
		.lyteGridStackTopLeft();
			height: @height;
			width: @width;
			top: @top;
			left: @left;
			cursor: @cursor;
			z-index: @zIndex;
	}
lyte-gridstack:not(.gridFreezeMode) .lyteGridStackTopRight{
			.lyteGridStackTopRight();
			height: @height;
			width: @width;
			top: @top;
			right: @right;
			cursor: @cursor;
			z-index: @zIndex;
	}	
lyte-gridstack:not(.gridFreezeMode) div.lyteBestFit{
	.lyteGridBestFit();
		border: @border;
		z-index: @zIndex;
		position: absolute !important;
		opacity: @opacity;

	}
lyte-grid-content{
	display: block;
	width: 100%;
	height: 100%;
}
lyte-gridstack {
	display: block;
	position: relative;
	height: 100%;
	scroll-behavior: smooth;
	overflow: auto;
}	

.lyteGridstackScope {
	.lyteGridStackScope();
	outline : @outline;
	overflow: @overflow;
	position: relative;
	transition-property: height;
	transition-duration: 0.4s;
	background-color: #EBEBEB;
    background-repeat: repeat;
}

 .lyteGridstackHandler:not(.gridSelected){
	.gridHandlerNotSelected();
	position: absolute;
	transition-duration: @transitionDuration;
	overflow: @overflow;
	-ms-overflow-style: @msOverflowStyle;
	cursor : @cursor;
	box-sizing: @boxSizing;
}

 .lyteGridstackHandler.gridSelected {
	.gridHandlerSelected();
	opacity: @opacity;
	z-index: @zIndex;
	position: absolute;
	overflow: @overflow;
	cursor : @cursor;
	box-sizing: @boxSizing;
	transition: @transition;
}

lyte-gridstack.gridFreezeMode .lyteGridstackHandler {
	cursor: default;
}

lyte-gridstack lyte-gridstack {
	width: 100%;
	height: 100%;
}

lyte-gridstack lyte-gridstack .lyteGridstackScope {
	height: 100%;
}

lyte-gridstack:not(.gridFreezeMode) .lyteBestFit.lyteGrid {
	.lyteBestFitlyteGrid();
	background-color: @backgroundColor;
    background-repeat: repeat;
    border: none;
}

/* import theme overrides - styles */
@import (optional) "../themes/@{gridstack}/ui-elements/gridstack/gridstack.styles.less";




/* import custom css - final tweaks by the user */
@import (optional) "../overrides/ui-elements/gridstack.overrides.less";