Lyte.Component.register("crux-mentions-body",{_template:'<template tag-name="crux-mentions-body"><ul class="mentionBody">  <template is="for" items="{{mentions}}" item="mention" index="index">    <li onmousedown="{{action(\'addMention\', mention)}}">      <template is="if" value="{{expHandlers(mention.$setype,\'===\',\'Users\')}}"><template case="true">        {{mention.full_name}}      </template><template case="false"><template is="if" value="{{expHandlers(mention.$setype,\'===\',\'Groups\')}}"><template case="true">        {{mention.name}}      </template><template case="false"><template is="if" value="{{expHandlers(mention.$setype,\'===\',\'Roles\')}}"><template case="true">        {{mention.name}}      </template></template></template></template></template></template>    </li>  </template></ul></template>',_dynamicNodes:[{type:"attr",position:[0,1]},{type:"for",position:[0,1],dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1]},{type:"if",position:[1,1],cases:{true:{dynamicNodes:[{type:"text",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"text",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"text",position:[1]}]}},default:{}}]}},default:{}}]}},default:{}}]}],_observedAttributes:["mentions","textboxSelector","triggerChar","mentionText","mentionedMentions","textareaWidth","bindingClass"],init:function(){},data:function(){return{mentions:Lyte.attr("array",{default:[]}),textboxSelector:Lyte.attr("string",{default:""}),triggerChar:Lyte.attr("string",{default:""}),mentionText:Lyte.attr("string",{default:""}),mentionedMentions:Lyte.attr("array",{default:[]}),textareaWidth:Lyte.attr("number",{default:0}),bindingClass:Lyte.attr("string",{default:""})}},didConnect:function(){var t=this.getTextarea.call(this),e=t.getBoundingClientRect().width;this.setData("textareaWidth",e),document.querySelector("."+this.getData("bindingClass")).setAttribute("style","width: "+e+"px;"),t.addEventListener("input",this.inputCallback.bind(this))},getTextarea:function(){var t=document.querySelector(this.getData("textboxSelector"));return"LYTE-INPUT"===t.nodeName?t.querySelector("textarea"):t},inputCallback:function(t){for(var e=this.getTextarea.call(this),a=this.getData("mentionedMentions"),n=e.value.split(this.getData("triggerChar")),i=n.length,s=[],o=0;o<i;o++){var r=n[o].trim();r&&s.push(r)}n=s,a=a.filter(function(t){return"Users"===t.$setype?n.includes(t.full_name):"Groups"===t.$setype?n.includes(t.name):"Roles"===t.$setype?n.includes(t.name):void 0}),this.setData("mentionedMentions",a)},actions:{addMention:function(t){this.getData("mentionedMentions").push(t);var e="";"Users"===t.$setype?e=t.full_name:"Groups"===t.$setype?e=t.name:"Roles"===t.$setype&&(e=t.name);var a,n=this.getTextarea.call(this),i=n.value,s=this.getData("mentionText"),o=this.getData("triggerChar"),r=new RegExp(o+s+"$|"+o+s+" ","gi");null!==r.exec(i)&&(a=i.replace(r,o+e+" "));var l=new RegExp(o+s+o,"gi");null!==l.exec(i)&&(a=i.replace(l,o+e+" "+o)),n.value=a,setTimeout(function(){n.focus()},100),document.querySelector("."+this.getData("bindingClass")).setAttribute("style","display:none; width:"+this.getData("textareaWidth")+"px;")}}});