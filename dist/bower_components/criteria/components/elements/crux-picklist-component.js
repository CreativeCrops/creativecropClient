Lyte.Component.register("crux-picklist-component",{_template:'<template tag-name="crux-picklist-component">\t<template is="switch" value="{{cxPropFrom}}"><template case="filter"></template><template case="criteria">\t\t\t<lyte-dropdown lt-prop-yield="true" lt-prop-type="multisearch" lt-prop-tabindex="1" on-add="{{method(\'addToList\', cxPropField)}}" on-remove="{{method(\'removeFromList\', cxPropField)}}" lt-prop-disabled-list="{{disabledList}}">\t\t\t\t<template is="registerYield" yield-name="yield">\t\t\t\t\t<lyte-drop-button class="outerbox1">\t\t\t\t\t\t<template is="for" items="{{displayValue}}" item="item" index="index">\t\t\t\t\t\t\t<span class="singleItem" data-value="{{item.actual_value}}">{{item.display_value}}<lyte-drop-remove class="boxclose">x</lyte-drop-remove></span>\t\t\t\t\t\t</template>\t\t\t\t\t\t<lyte-search lt-prop-type="text" lt-prop-query-selector="{&quot;scope&quot;:&quot;{{concat(&quot;.parentscope_&quot;, cxPropField.api_name)}}&quot;, &quot;target&quot;:&quot;.picklist_values&quot;, &quot;search&quot;:&quot;lyte-drop-item&quot;}" on-search="{{method(\'showNoResult\', cxPropField)}}" id="{{concat(\'search_\', cxPropField.api_name)}}" lt-prop-placeholder="{{cruxGetI18n(\'None\')}}"></lyte-search>\t\t\t\t\t</lyte-drop-button>\t\t\t\t\t<lyte-drop-box>\t\t\t\t\t\t<lyte-drop-body class="{{concat(\'parentscope_\', cxPropField.api_name)}}">\t\t\t\t\t\t\t<template is="for" items="{{pickListValues}}" item="item" index="indeval"><lyte-drop-item class="picklist_values" data-value="{{item.actual_value}}" data-extra="{{item.extra}}">{{item.display_value}}</lyte-drop-item></template>\t\t\t\t\t\t\t<template is="if" value="{{showNoOption}}"><template case="true"><lyte-drop-item class="picklist_values lyteDropdown-disabled" data-value="cruxDisabled">{{cruxGetI18n(\'crm.label.no.options.found\')}}</lyte-drop-item></template></template>\t\t\t\t\t\t</lyte-drop-body>\t\t\t\t\t</lyte-drop-box>\t\t\t\t</template>\t\t\t</lyte-dropdown>\t\t</template><template case="view">{{cxPropValue}}</template></template></template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"switch",position:[1],cases:{filter:{dynamicNodes:[],additional:{next:"criteria"}},criteria:{dynamicNodes:[{type:"attr",position:[1]},{type:"registerYield",position:[1,1],dynamicNodes:[{type:"attr",position:[1,1]},{type:"for",position:[1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0]},{type:"componentDynamic",position:[1,2]}]},{type:"attr",position:[1,3]},{type:"componentDynamic",position:[1,3]},{type:"componentDynamic",position:[1]},{type:"attr",position:[3,1]},{type:"attr",position:[3,1,1]},{type:"for",position:[3,1,1],dynamicNodes:[{type:"attr",position:[0]},{type:"text",position:[0,0]},{type:"componentDynamic",position:[0]}]},{type:"attr",position:[3,1,3]},{type:"if",position:[3,1,3],cases:{true:{dynamicNodes:[{type:"text",position:[0,0]},{type:"componentDynamic",position:[0]}]}},default:{}},{type:"componentDynamic",position:[3,1]},{type:"componentDynamic",position:[3]}]},{type:"componentDynamic",position:[1]}]},view:{dynamicNodes:[{type:"text",position:[0]}]}},default:{}}],_observedAttributes:["cxPropFrom","cxPropField","cxPropValue","displayValue","pickListValues","value","origLen","showNoOption","disabledList","cxPropEmptyValue"],data:function(){return{cxPropFrom:Lyte.attr("string",{default:"view"}),cxPropField:Lyte.attr("object"),cxPropValue:Lyte.attr("string"),displayValue:Lyte.attr("array",{default:[]}),pickListValues:Lyte.attr("array"),value:Lyte.attr("array",{default:[]}),origLen:Lyte.attr("number"),showNoOption:Lyte.attr("boolean",{default:!1}),disabledList:Lyte.attr("array",{default:["cruxDisabled"]}),cxPropEmptyValue:Lyte.attr("string",{default:""})}},methods:{showNoResult:function(t,e){if(e[0]&&"true"==e[0].getAttribute("data-extra")&&e.pop(),!document.querySelector("[data-extra='true']")||event&&"LYTE-DROP-ITEM"==event.target.tagName||Lyte.arrayUtils(this.getData("pickListValues"),"pop"),0==e.length){var a=arguments[2].querySelector("input").value;Lyte.arrayUtils(this.getData("pickListValues"),"push",{actual_value:a,display_value:a,extra:"true"})}},addToList:function(t,e,a){Lyte.arrayUtils(this.getData("value"),"push",a),document.getElementById("search_"+t.api_name).setValue(""),this.$node.querySelector("lyte-search").ltProp("placeholder","")},removeFromList:function(t,e,a){for(var i=this.getData("value"),o=0;o<i.length;o++)if(i[o]==a){for(var r=Lyte.arrayUtils(this.getData("value"),"removeAt",o),s=0;s<this.getData("pickListValues").length;s++)if(this.getData("pickListValues")[s].actual_value==r){"true"==this.getData("pickListValues")[s].extra?Lyte.arrayUtils(this.getData("pickListValues"),"pop"):this.setData("origLen",this.getData("origLen")+1);break}break}0==i.length&&this.$node.querySelector("lyte-search").ltProp("placeholder",_cruxUtils.getI18n("None"))}},observeValue:function(){this.getData("cxPropField");if(arguments[0].insertedItems){for(var t=arguments[0].insertedItems[0],e=this.getData("pickListValues"),a=0;a<e.length;a++)if(e[a].actual_value==t){Lyte.arrayUtils(this.getData("displayValue"),"push",e[a]),"true"==e.extra?Lyte.arrayUtils(this.getData("pickListValues"),"pop"):this.setData("origLen",this.getData("origLen")-1);break}}else Lyte.arrayUtils(this.getData("displayValue"),"removeAt",arguments[0].index)}.observes("value.[]"),validate:function(){var t=this.getData("displayValue");return""==t?(alert(_cruxUtils.getI18n("crm.field.valid.check",this.getData("cxPropField").field_label)),!1):!(t.replace(/^\s+/g,"").replace(/\s+$/g,"").indexOf("*")>-1)||(alert(_cruxUtils.getI18n("crm.alert.character.not.allowed"),["*"]),!1)},getValue:function(){for(var t=[],e=0;e<this.getData("displayValue").length;e++)t.push(this.getData("displayValue")[e].actual_value);return t},observeLen:function(){0==this.getData("origLen")?this.setData("showNoOption",!0):this.setData("showNoOption",!1)}.observes("origLen"),observeField:function(){if(this.getData("cxPropField")){var t=this.getData("cxPropField").pick_list_values,e=t.map(function(t){return t.display_value}),a=e.slice(0);e.sort();var i=[],o=0;for("filter"==this.getData("cxPropFrom")&&(o=1);o<e.length;o++)i.push(t[a.indexOf(e[o])]);this.setData({pickListValues:i,origLen:i.length})}}.observes("cxPropField").on("init"),init:function(){"view"==this.getData("cxPropFrom")&&(this.getData("cxPropValue")?100==this.getData("cxPropField").ui_type&&this.setData("cxPropValue",this.getData("cxPropValue").join("; ")):this.setData("cxPropValue",this.getData("cxPropEmptyValue")))}});